{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/sketchPad.js","webpack:///./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAA2C;;AAE5B;AACf;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC9DA;AAAA;AAA+C;;AAE/C;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAAS;AACjB,CAAC,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import \"../../dist/styles/sketch-pad.scss\";\n\nexport default class SketchPad {\n    constructor(canvas, tools) {\n        this.canvas = canvas;\n        this.context = canvas.getContext(\"2d\");\n        // this.dimensions = { width: canvas.width, height: canvas.height };\n        this.setBackground();\n        this.dragging = false; // indicates if the mouse is held down\n        this.putPoint = this.putPoint.bind(this);\n        this.engage = this.engage.bind(this);\n        this.disengage = this.disengage.bind(this);\n        this.canvas.addEventListener(\"mousedown\", this.engage);\n        const html = document.getElementsByTagName(\"html\")[0];\n        html.addEventListener(\"mouseup\", this.disengage)\n        // this.canvas.addEventListener(\"mouseup\", this.disengage);\n        this.canvas.addEventListener(\"mousemove\", this.putPoint);\n\n\n    }\n\n    putPoint(e) {\n        const radius = 10;\n        if(this.dragging) {\n            this.context.lineWidth = 2*radius;\n            this.context.strokeStyle = \"#FF0000\";\n            this.context.lineCap = \"round\";\n\n            this.context.lineTo(e.offsetX, e.offsetY);\n            this.context.stroke(); // nothing will show untill we do stroke() or fill()\n            this.context.beginPath();\n            // this.context.arc(e.offsetX, e.offsetY, radius, 0, Math.PI*2);\n            // this.context.fill();\n            // this.context.beginPath();\n            this.context.moveTo(e.offsetX, e.offsetY); // sets an active point\n        }\n    }\n\n    engage(e) {\n        this.dragging = true;\n        this.putPoint(e);\n    }\n\n    disengage() {\n        this.dragging = false;\n        this.context.beginPath(); // clears any current path\n    }\n\n    setBackground() {\n        const background = new Image();\n        background.src = \"/dist/images/sketchpad.jpg\";\n\n        background.onload = () => {\n            this.context.drawImage(\n                background,\n                0,\n                0,\n                this.canvas.width,\n                this.canvas.height\n            );\n        };\n    }\n}","import SketchPad from \"./components/sketchPad\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById(\"canvas\");\n    canvas.setAttribute('width', 800);\n    canvas.setAttribute('height', 800);\n    // tools goes here, and then will pass it as a second arg to the cnavas\n    new SketchPad(canvas);\n});"],"sourceRoot":""}