{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/colorPicker.js","webpack:///./src/components/sketchPad.js","webpack:///./src/components/tool.js","webpack:///./src/index.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AAAA;AAAe;AACf;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA,kEAAkE;AAClE,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,O;;;;;;;;;;;;AC7KA;AAAA;AAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AAAuB;AACA;;AAER;AACf;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAA+C;AACI;AACd;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAAS;AACjB,CAAC,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default class ColorPicker {\n    constructor() {\n        // color palette\n        \n\n    }\n}\n\n\n// var colorBlock = document.getElementById('color-block');\n// var ctx1 = colorBlock.getContext('2d');\n// var width1 = colorBlock.width;\n// var height1 = colorBlock.height;\n\n// var colorStrip = document.getElementById('color-strip');\n// var ctx2 = colorStrip.getContext('2d');\n// var width2 = colorStrip.width;\n// var height2 = colorStrip.height;\n\n// var colorLabel = document.getElementById('color-label');\n\n// var x = 0;\n// var y = 0;\n// var drag = false;\n// var rgbaColor = 'rgba(255,0,0,1)';\n\n// ctx1.rect(0, 0, width1, height1);\n// fillGradient();\n\n// ctx2.rect(0, 0, width2, height2);\n// var grd1 = ctx2.createLinearGradient(0, 0, 0, height1);\n// grd1.addColorStop(0, 'rgba(255, 0, 0, 1)');\n// grd1.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n// grd1.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n// grd1.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n// grd1.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n// grd1.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n// grd1.addColorStop(1, 'rgba(255, 0, 0, 1)');\n// ctx2.fillStyle = grd1;\n// ctx2.fill();\n\n// function click(e) {\n//     x = e.offsetX;\n//     y = e.offsetY;\n//     var imageData = ctx2.getImageData(x, y, 1, 1).data;\n//     rgbaColor = 'rgba(' + imageData[0] + ',' + imageData[1] + ',' + imageData[2] + ',1)';\n//     fillGradient();\n// }\n\n// function fillGradient() {\n//     ctx1.fillStyle = rgbaColor;\n//     ctx1.fillRect(0, 0, width1, height1);\n\n//     var grdWhite = ctx2.createLinearGradient(0, 0, width1, 0);\n//     grdWhite.addColorStop(0, 'rgba(255,255,255,1)');\n//     grdWhite.addColorStop(1, 'rgba(255,255,255,0)');\n//     ctx1.fillStyle = grdWhite;\n//     ctx1.fillRect(0, 0, width1, height1);\n\n//     var grdBlack = ctx2.createLinearGradient(0, 0, 0, height1);\n//     grdBlack.addColorStop(0, 'rgba(0,0,0,0)');\n//     grdBlack.addColorStop(1, 'rgba(0,0,0,1)');\n//     ctx1.fillStyle = grdBlack;\n//     ctx1.fillRect(0, 0, width1, height1);\n// }\n\n// function mousedown(e) {\n//     drag = true;\n//     changeColor(e);\n// }\n\n// function mousemove(e) {\n//     if (drag) {\n//         changeColor(e);\n//     }\n// }\n\n// function mouseup(e) {\n//     drag = false;\n// }\n\n// function changeColor(e) {\n//     x = e.offsetX;\n//     y = e.offsetY;\n//     var imageData = ctx1.getImageData(x, y, 1, 1).data;\n//     rgbaColor = 'rgba(' + imageData[0] + ',' + imageData[1] + ',' + imageData[2] + ',1)';\n//     colorLabel.style.backgroundColor = rgbaColor;\n// }\n\n// colorStrip.addEventListener(\"click\", click, false);\n\n// colorBlock.addEventListener(\"mousedown\", mousedown, false);\n// colorBlock.addEventListener(\"mouseup\", mouseup, false);\n// colorBlock.addEventListener(\"mousemove\", mousemove, false);\n\n\n// // // import \"../../dist/styles/color-picker.css\";\n\n// // export default class ColorPicker {\n// //     constructor() {\n// //         this.colors = document.getElementById(\"color-picker\");\n// //         this.colorctx = this.colors.getContext('2d');\n// //         this.selectedColor = \"#000000\";\n\n// //         this.buildColorPalette();\n// //         this.getColor = this.getColor.bind(this);\n// //     }\n\n// //     buildColorPalette() {\n// //         var gradient = this.colorctx.createLinearGradient(0, 0, this.colors.width, 0);\n// //         // Create color gradient\n// //         gradient.addColorStop(0, \"rgb(255,   0,   0)\");\n// //         gradient.addColorStop(0.15, \"rgb(255,   0, 255)\");\n// //         gradient.addColorStop(0.33, \"rgb(0,     0, 255)\");\n// //         gradient.addColorStop(0.49, \"rgb(0,   255, 255)\");\n// //         gradient.addColorStop(0.67, \"rgb(0,   255,   0)\");\n// //         gradient.addColorStop(0.84, \"rgb(255, 255,   0)\");\n// //         gradient.addColorStop(1, \"rgb(255,   0,   0)\");\n// //         // Apply gradient to canvas\n// //         this.colorctx.fillStyle = gradient;\n// //         this.colorctx.fillRect(0, 0, this.colorctx.canvas.width, this.colorctx.canvas.height);\n\n// //         // Create semi transparent gradient (white -> trans. -> black)why jezz?\n// //         gradient = this.colorctx.createLinearGradient(0, 0, 0, this.colors.height);\n// //         gradient.addColorStop(0, \"rgba(255, 255, 255, 1)\");\n// //         gradient.addColorStop(0.5, \"rgba(255, 255, 255, 0)\");\n// //         gradient.addColorStop(0.5, \"rgba(0,     0,   0, 0)\");\n// //         gradient.addColorStop(1, \"rgba(0,     0,   0, 1)\");\n        \n// //         this.colorctx.fillStyle = gradient;\n// //         this.colorctx.fillRect(0, 0, this.colorctx.canvas.width, this.colorctx.canvas.height);\n// //         // this.colors.mousedown(function (e) {\n// //         //     // Track mouse movement on the canvas if the mouse button is down\n// //         //     document.mousemove(function (e) {\n// //         //         this.colorEventX = e.pageX - ms.colors.offset().left;\n// //         //         this.colorEventY = e.pageY - ms.colors.offset().top;\n// //         //     });\n\n// //         //     // Get the color at the current mouse coordinates\n// //         //     this.colorTimer = setInterval(this.getColor, 50);\n// //         // })\n// //         //     // On mouseup, clear the interval and unbind the mousemove event,\n// //         //     // it should only hthisen if the button is down\n// //         //     .mouseup(function (e) {\n// //         //         clearInterval(ms.colorTimer);\n// //         //         document.unbind('mousemove');\n// //         //     });\n\n// //         this.colors.addEventListener(\"mousedown\", () => {\n// //             // Track mouse movement on the canvas if the mouse button is down\n// //             document.addEventListener(\"mousemove\", function(e) {\n// //                 // this.colorEventX = e.pageX - this.colors.offset().left;\n// //                 // this.colorEventY = e.pageY - this.colors.offset().top;\n// //                 this.colorEventX = e.layerX;\n// //                 this.colorEventY = e.layerY;\n// //             });\n\n// //             // Get the color at the current mouse coordinates\n// //             this.colorTimer = setInterval(this.getColor, 50);\n// //         });\n\n// //         // On mouseup, clear the interval and unbind the mousemove event,\n// //         // it should only hthisen if the button is down\n// //         this.colors.addEventListener(\"mouseup\", function (e) {\n// //             clearInterval(this.colorTimer);\n// //             document.removeEventListener('mousemove', ()=>{});\n// //         });\n// //     };\n\n// //     getColor(e) {\n// //         const imageData = this.colorctx.getImageData(this.colorEventX, this.colorEventY, 1, 1);\n// //         this.selectedColor = 'rgb(' + imageData.data[4] + ', ' + imageData.data[5] + ', ' + imageData.data[6] + ')';\n// //     };\n// // }","export default class SketchPad {\n    constructor(canvas, tool) {\n        \n        this.canvas = canvas;\n        this.tool = tool;\n        this.context = canvas.getContext(\"2d\");\n\n        // clear canvas\n        this.clearCanvasBtn = document.getElementById('clear-canvas-btn');\n\n        // color fill\n        this.colorFillBtn = document.getElementById(\"color-fill\");\n        \n        // set the background to white\n        this.context.fillStyle = \"white\";\n        this.context.fillRect(0, 0, canvas.width, canvas.height);\n        // this.dimensions = { width: canvas.width, height: canvas.height };\n        // this.setBackground();\n        this.dragging = false; // indicates if the mouse is held down\n        this.putPoint = this.putPoint.bind(this);\n        this.engage = this.engage.bind(this);\n        this.disengage = this.disengage.bind(this);\n        this.clear = this.clear.bind(this);\n        this.colorFill = this.colorFill.bind(this);\n\n        this.canvas.addEventListener(\"mousedown\", this.engage);\n        const html = document.getElementsByTagName(\"html\")[0];\n        html.addEventListener(\"mouseup\", this.disengage)\n        // this.canvas.addEventListener(\"mouseup\", this.disengage);\n        this.canvas.addEventListener(\"mousemove\", this.putPoint);\n\n        this.clearCanvasBtn.addEventListener('click', this.clear);\n        this.colorFillBtn.addEventListener(\"click\", this.colorFill);\n    }\n\n    putPoint(e) {\n        const radius = 10;\n        if(this.dragging) {\n            this.context.lineWidth = 2*radius;\n            this.context.strokeStyle = \"#FF0000\";\n            // this.context.strokeStyle = this.tool.colorPicker.selectColor;\n            this.context.lineCap = \"round\";\n\n            this.context.lineTo(e.offsetX, e.offsetY);\n            this.context.stroke(); // nothing will show untill we do stroke() or fill()\n            this.context.beginPath();\n            // this.context.arc(e.offsetX, e.offsetY, radius, 0, Math.PI*2);\n            // this.context.fill();\n            // this.context.beginPath();\n            this.context.moveTo(e.offsetX, e.offsetY); // sets an active point\n        }\n    }\n\n    engage(e) {\n        this.dragging = true;\n        this.putPoint(e);\n    }\n\n    disengage() {\n        this.dragging = false;\n        this.context.beginPath(); // clears any current path\n    }\n\n    colorFill() {\n        this.context.fillStyle = \"yellow\";\n        this.context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    clear(e) {\n        this.context.clearRect(\n            0,\n            0,\n            this.context.canvas.width,\n            this.context.canvas.height\n        );\n        this.context.fillStyle = \"white\";\n        this.context.fillRect(0, 0, canvas.width, canvas.height);\n    }\n\n    // setBackground() {\n    //     const background = new Image();\n    //     background.src = \"/dist/images/sketchpad.jpg\";\n\n    //     background.onload = () => {\n    //         this.context.drawImage(\n    //             background,\n    //             0,\n    //             0,\n    //             this.canvas.width,\n    //             this.canvas.height\n    //         );\n    //     };\n    // }\n}","import \"./brushPicker\";\nimport \"./colorPicker\";\n\nexport default class Tool {\n    constructor(colorPicker, BrushPicker) {\n        this.colorPicker = colorPicker;\n        this.BrushPicker = BrushPicker;\n    }\n}","import SketchPad from \"./components/sketchPad\";\nimport ColorPicker from \"./components/colorPicker\";\nimport Tool from \"./components/tool\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById(\"canvas\");\n    canvas.setAttribute('width', 800);\n    canvas.setAttribute('height', 800);\n    // tools goes here, and then will pass it as a second arg to the cnavas\n    // const colorPicker = new ColorPicker();\n    // const tool = new Tool(colorPicker);\n    new SketchPad(canvas) //, tool);\n});"],"sourceRoot":""}